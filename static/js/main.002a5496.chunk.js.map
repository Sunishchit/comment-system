{"version":3,"sources":["comments/CommentForm.js","comments/Comment.js","api.js","comments/Comments.js","App.js","index.js"],"names":["CommentForm","handleSubmit","submitLabel","hasCancelButton","handleCancel","initialText","useState","text","setText","isTextareaDisabled","length","onSubmit","event","preventDefault","className","value","onChange","e","target","disabled","type","onClick","Comment","comment","replies","setActiveComment","activeComment","updateComment","deleteComment","addComment","parentId","currentUserId","isEditing","id","isReplying","timePassed","Date","createdAt","canDelete","userId","canReply","Boolean","canEdit","replyId","toLocaleDateString","src","username","body","map","reply","getComments","a","toISOString","createComment","Math","random","toString","substr","Comments","commentsUrl","backendComments","setBackendComments","rootComments","filter","backendComment","createCommentApi","then","commentId","updateCommentApi","updatedBackendComments","window","confirm","deleteCommentApi","useEffect","getCommentsApi","data","rootComment","sort","b","getTime","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.002a5496.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst CommentForm = ({\n  handleSubmit,\n  submitLabel,\n  hasCancelButton = false,\n  handleCancel,\n  initialText = \"\",\n}) => {\n  const [text, setText] = useState(initialText);\n  const isTextareaDisabled = text.length === 0;\n  const onSubmit = (event) => {\n    event.preventDefault();\n    handleSubmit(text);\n    setText(\"\");\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <textarea\n        className=\"comment-form-textarea\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      />\n      <button className=\"comment-form-button\" disabled={isTextareaDisabled}>\n        {submitLabel}\n      </button>\n      {hasCancelButton && (\n        <button\n          type=\"button\"\n          className=\"comment-form-button comment-form-cancel-button\"\n          onClick={handleCancel}\n        >\n          Cancel\n        </button>\n      )}\n    </form>\n  );\n};\n\nexport default CommentForm;\n","import CommentForm from \"./CommentForm\";\n\nconst Comment = ({\n  comment,\n  replies,\n  setActiveComment,\n  activeComment,\n  updateComment,\n  deleteComment,\n  addComment,\n  parentId = null,\n  currentUserId,\n}) => {\n  const isEditing =\n    activeComment &&\n    activeComment.id === comment.id &&\n    activeComment.type === \"editing\";\n  const isReplying =\n    activeComment &&\n    activeComment.id === comment.id &&\n    activeComment.type === \"replying\";\n  const fiveMinutes = 300000;\n  const timePassed = new Date() - new Date(comment.createdAt) > fiveMinutes;\n  const canDelete =\n    currentUserId === comment.userId && replies.length === 0 && !timePassed;\n  const canReply = Boolean(currentUserId);\n  const canEdit = currentUserId === comment.userId && !timePassed;\n  const replyId = parentId ? parentId : comment.id;\n  const createdAt = new Date(comment.createdAt).toLocaleDateString();\n  return (\n    <div key={comment.id} className=\"comment\">\n      <div className=\"comment-image-container\">\n        <img src=\"/user-icon.png\" />\n      </div>\n      <div className=\"comment-right-part\">\n        <div className=\"comment-content\">\n          <div className=\"comment-author\">{comment.username}</div>\n          <div>{createdAt}</div>\n        </div>\n        {!isEditing && <div className=\"comment-text\">{comment.body}</div>}\n        {isEditing && (\n          <CommentForm\n            submitLabel=\"Update\"\n            hasCancelButton\n            initialText={comment.body}\n            handleSubmit={(text) => updateComment(text, comment.id)}\n            handleCancel={() => {\n              setActiveComment(null);\n            }}\n          />\n        )}\n        <div className=\"comment-actions\">\n          {canReply && (\n            <div\n              className=\"comment-action\"\n              onClick={() =>\n                setActiveComment({ id: comment.id, type: \"replying\" })\n              }\n            >\n              Reply\n            </div>\n          )}\n          {canEdit && (\n            <div\n              className=\"comment-action\"\n              onClick={() =>\n                setActiveComment({ id: comment.id, type: \"editing\" })\n              }\n            >\n              Edit\n            </div>\n          )}\n          {canDelete && (\n            <div\n              className=\"comment-action\"\n              onClick={() => deleteComment(comment.id)}\n            >\n              Delete\n            </div>\n          )}\n        </div>\n        {isReplying && (\n          <CommentForm\n            submitLabel=\"Reply\"\n            handleSubmit={(text) => addComment(text, replyId)}\n          />\n        )}\n        {replies.length > 0 && (\n          <div className=\"replies\">\n            {replies.map((reply) => (\n              <Comment\n                comment={reply}\n                key={reply.id}\n                setActiveComment={setActiveComment}\n                activeComment={activeComment}\n                updateComment={updateComment}\n                deleteComment={deleteComment}\n                addComment={addComment}\n                parentId={comment.id}\n                replies={[]}\n                currentUserId={currentUserId}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Comment;\n","export const getComments = async () => {\n  return [\n    {\n      id: \"1\",\n      body: \"First comment\",\n      username: \"Jack\",\n      userId: \"1\",\n      parentId: null,\n      createdAt: new Date().toISOString(),\n    },\n    {\n      id: \"2\",\n      body: \"Second comment\",\n      username: \"John\",\n      userId: \"2\",\n      parentId: null,\n      createdAt:new Date().toISOString(),\n    },\n    {\n      id: \"3\",\n      body: \"First comment first child\",\n      username: \"John\",\n      userId: \"2\",\n      parentId: \"1\",\n      createdAt: new Date().toISOString(),\n    },\n    {\n      id: \"4\",\n      body: \"Second comment second child\",\n      username: \"John\",\n      userId: \"2\",\n      parentId: \"2\",\n      createdAt:new Date().toISOString(),\n    },\n  ];\n};\n\nexport const createComment = async (text, parentId = null) => {\n  return {\n    id: Math.random().toString(36).substr(2, 9),\n    body: text,\n    parentId,\n    userId: \"1\",\n    username: \"John\",\n    createdAt: new Date().toISOString(),\n  };\n};\n\nexport const updateComment = async (text) => {\n  return { text };\n};\n\nexport const deleteComment = async () => {\n  return {};\n};\n","import { useState, useEffect } from \"react\";\nimport CommentForm from \"./CommentForm\";\nimport Comment from \"./Comment\";\nimport {\n  getComments as getCommentsApi,\n  createComment as createCommentApi,\n  updateComment as updateCommentApi,\n  deleteComment as deleteCommentApi,\n} from \"../api\";\n\nconst Comments = ({ commentsUrl, currentUserId }) => {\n  const [backendComments, setBackendComments] = useState([]);\n  const [activeComment, setActiveComment] = useState(null);\n  const rootComments = backendComments.filter(\n    (backendComment) => backendComment.parentId === null\n  );\n  const getReplies = (commentId) =>\n    backendComments\n      .filter((backendComment) => backendComment.parentId === commentId)\n      .sort(\n        (a, b) =>\n          new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n      );\n  const addComment = (text, parentId) => {\n    createCommentApi(text, parentId).then((comment) => {\n      setBackendComments([comment, ...backendComments]);\n      setActiveComment(null);\n    });\n  };\n\n  const updateComment = (text, commentId) => {\n    updateCommentApi(text).then(() => {\n      const updatedBackendComments = backendComments.map((backendComment) => {\n        if (backendComment.id === commentId) {\n          return { ...backendComment, body: text };\n        }\n        return backendComment;\n      });\n      setBackendComments(updatedBackendComments);\n      setActiveComment(null);\n    });\n  };\n  const deleteComment = (commentId) => {\n    if (window.confirm(\"Are you sure you want to remove comment?\")) {\n      deleteCommentApi().then(() => {\n        const updatedBackendComments = backendComments.filter(\n          (backendComment) => backendComment.id !== commentId\n        );\n        setBackendComments(updatedBackendComments);\n      });\n    }\n  };\n\n  useEffect(() => {\n    getCommentsApi().then((data) => {\n      setBackendComments(data);\n    });\n  }, []);\n\n  return (\n    <div className=\"comments\">\n      <h3 className=\"comments-title\">Comments</h3>\n      <div className=\"comment-form-title\">Write comment</div>\n      <CommentForm submitLabel=\"Write\" handleSubmit={addComment} />\n      <div className=\"comments-container\">\n        {rootComments.map((rootComment) => (\n          <Comment\n            key={rootComment.id}\n            comment={rootComment}\n            replies={getReplies(rootComment.id)}\n            activeComment={activeComment}\n            setActiveComment={setActiveComment}\n            addComment={addComment}\n            deleteComment={deleteComment}\n            updateComment={updateComment}\n            currentUserId={currentUserId}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Comments;\n","import Comments from \"./comments/Comments\";\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Comment System</h1>\n      <Comments\n       // commentsUrl=\"http://localhost:3004/comments\"\n        currentUserId=\"1\"\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}